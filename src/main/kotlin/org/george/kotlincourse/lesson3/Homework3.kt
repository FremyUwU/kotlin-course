package org.george.kotlincourse.lesson3

class Homework3 {
    val event: String = "memorial service"
    //Название мероприятия

    var eventDate: Any = "11.08.2024"
    //дата мероприятия

    // может поменяться до окончательного утверждения, или перенестись


    var place: String = "Заречная, 13"
    //Место проведения

    lateinit var detailedBudget: String
    //Подробный бюджет мероприятия, включая расходы на оборудование, кейтеринг и другие операционные расходы.

    var participant: Int = 100
    //Количество участников

    var duration : Double = 3.5
    //Длительность хакатона

    val contract : String = "Контактная информация и условия соглашений с поставщиками пищи, оборудования и других услуг."

    var status : Boolean = false;
    //Текущее состояние хакатона (статус)

    val listOfSponsors : String = "Какие-то Арабские шейхи"
    //Список спонсоров

    val budget : Double = 10000.0
    //Бюджет мероприятия

    var internet : Boolean = true
    //Текущий уровень доступа к интернету

    val info : String = "Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки."
    //Информация о транспортировке оборудования, распределении ресурсов и координации между различными командами поддержки.

    val teams : Int = 5
    //Количество команд

    var tasks : String = "Перечень задач"
    //Перечень задач

    val evacuation : String = "План эвакуации"
    //План эвакуации

    val listOfEquipment : String = "Список доступного оборудования"
    //Список доступного оборудования

    var listOfAvailableEquipment : String = "Список свободного оборудования"
    //Список свободного оборудования

    lateinit var nutritionSchedule : String
    //График питания участников (зависит от поставщика питания, определяемого за неделю до начала)

    val planB : String = "План мероприятий на случай сбоев"
    //План мероприятий на случай сбоев

    val experts : String = "Список экспертов и жюри"
    //Список экспертов и жюри

    val methods: String by lazy {""}
    //Методы и процедуры для сбора отзывов от участников и гостей, включая анонимные опросы и интервью.

    val privacyPol: String = "Политика конфиденциальности"
    //Политика конфиденциальности

    private val rewiews: String by lazy {""}
    //Приватные отзывы (фидбэк) участников и зрителей для анализа проблем.

    var temperature: Double = 20.0
    //Текущая температура в помещении

    var state: String = "Мониторинг и анализ производительности сетевого оборудования и интернет-соединения"
    //Мониторинг и анализ производительности сетевого оборудования и интернет-соединения.

    var light: Int = 1000
    //Уровень освещения

    private var log: String = "Лог событий мероприятия"
    //Лог событий мероприятия

    var ambulance: String = "Доступность медицинской помощи"
    //Доступность медицинской помощи

    private val security: String = "протоколы и планы"
    //Планы и процедуры для обеспечения безопасности мероприятия, включая планы эвакуации и протоколы чрезвычайных ситуаций.

    val registerNumber: String = "3T715"
    //Регистрационный номер мероприятия

    val noize: Int = 500
    //Максимально допустимый уровень шума в помещении хакатона.

    var initialNoize: Boolean = true
    //Индикатор превышения уровня шума в помещениях

    lateinit var format: String
    //Формат мероприятия (зависит от геополитической обстановки)

    var availablePlace: Int = 15
        get() = field
        set(value) {
            if (value > 0)
            field=value}
    //Количество свободных мест для отдыха (например, кресел или диванов), сеттер валидирует, чтобы количество не было меньше нуля.

    private val journalistPlan : String = "План взаимодействия с прессой"
    //План взаимодействия с прессой

    val project: String by lazy {""}
    //Детальная информация о проектах каждой команды, сбор данных включает в себя компиляцию кода и сбор статистики прогона автоматизированных проверок.

    var permission: Boolean = true
    //Статус получения всех необходимых разрешений.Указывает, открыт ли доступ к эксклюзивным ресурсам (например, специальному оборудованию)

    val parthers: String = "Список партнеров мероприятия"
    //Список партнеров мероприятия

    val totalReport: String by lazy {""}
    //Отчет, включающий фотографии, видео и отзывы, генерируется и становится доступен после завершения мероприятия.

    private val prizePlan : String = "План распределения призов"
    //План распределения призов

    private val contactEmergency: String = "Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам."
    //Контактная информация экстренных служб, медицинского персонала и других важных служб, недоступная участникам.

    var terms: String = "Особые условия для участников с ограниченными возможностями"
    //Особые условия для участников с ограниченными возможностями

    val mood: String by lazy { "" }
    //Общее настроение участников (определяется опросами)

    lateinit var fullPlan: String
    //Подробный план хакатона, включающий время и содержание каждого сегмента, инициализируется непосредственно перед началом мероприятия.

    lateinit var specialGuest: String
    //Имя знаменитого специального гостя, которое будет объявлено за день до мероприятия.

    val sumPeople: Int = 1020
//Максимальное количество людей, которое может вместить место проведения.

    val durationOfProject: Int = 180
//Стандартное количество часов, отведенное каждой команде для работы над проектом.
}